# Nginx Configuration - Phase 4
# Reverse proxy for YouTube Shorts Studio with video streaming optimization

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Upstream servers
    upstream api_backend {
        server api:8000;
        keepalive 32;
    }
    
    upstream studio_frontend {
        server studio:3000;
        keepalive 32;
    }
    
    # Main server block
    server {
        listen 80;
        server_name localhost _;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy strict-origin-when-cross-origin;
        
        # Client body size limit (for video uploads)
        client_max_body_size 2G;
        client_body_timeout 300s;
        client_header_timeout 60s;
        
        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        
        # API routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api_backend/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # API specific timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Upload routes with higher limits
        location /api/upload/ {
            limit_req zone=upload burst=5 nodelay;
            
            proxy_pass http://api_backend/upload/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Upload specific timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            # Large upload settings
            client_max_body_size 2G;
            proxy_request_buffering off;
        }
        
        # WebSocket routes for real-time collaboration
        location /ws/ {
            proxy_pass http://api_backend/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            # WebSocket timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }
        
        # Video file serving with range request support
        location /videos/ {
            alias /var/www/videos/;
            
            # Enable range requests for video streaming
            add_header Accept-Ranges bytes;
            
            # Cache headers for video files
            location ~* \.(mp4|webm|mov)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Accept-Ranges bytes;
                
                # CORS headers for video access
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
                add_header Access-Control-Allow-Headers "Range";
                add_header Access-Control-Expose-Headers "Content-Length, Content-Range";
                
                # Handle preflight requests
                if ($request_method = OPTIONS) {
                    return 204;
                }
            }
            
            # Proxy files (smaller, for timeline scrubbing)
            location ~* /proxy/ {
                expires 30d;
                add_header Cache-Control "public";
                add_header Accept-Ranges bytes;
            }
            
            # Thumbnails and images
            location ~* \.(jpg|jpeg|png|gif|webp)$ {
                expires 7d;
                add_header Cache-Control "public";
            }
        }
        
        # Frontend application
        location / {
            proxy_pass http://studio_frontend/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Frontend specific settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Next.js static assets with aggressive caching
        location /_next/static/ {
            proxy_pass http://studio_frontend/_next/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        # Favicon and robots
        location = /favicon.ico {
            proxy_pass http://studio_frontend/favicon.ico;
            expires 1d;
            access_log off;
        }
        
        location = /robots.txt {
            proxy_pass http://studio_frontend/robots.txt;
            expires 1d;
            access_log off;
        }
        
        # Security - block common exploits
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # HTTPS server (commented out - uncomment when SSL certs are available)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # SSL optimization
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     ssl_prefer_server_ciphers on;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #     
    #     # Include the same location blocks as HTTP server
    # }
}